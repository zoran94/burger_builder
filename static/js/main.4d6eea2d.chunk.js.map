{"version":3,"sources":["assets/Images/27.1 burger-logo.png.png","hoc/Ouxed.js","components/Logo/Logo.js","components/Navigation/NavigationItems/Navigationitem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/drawToggle/DrawToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/buildControl/buildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","axios-order.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actions.js","components/Order/checkoutSummary/CheckoutSummary.js","components/UI/Input/input.js","components/Checkout/ContactData/ContactData.js","store/actions/order.js","components/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","store/actions/auth.js","containers/Auth/Auth.js","containers/Auth/logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","__webpack_require__","p","aux","props","children","Logo","react_default","a","createElement","className","style","height","src","burgerLogo","alt","NavigationItem","react_router_dom","to","link","exact","NavigationItems","Navigationitem_NavigationItem","isAuthenticated","DrawToggle","onClick","clicked","ToolBar","drawToggle_DrawToggle","toggleClicked","components_Logo_Logo","Navigation_NavigationItems_NavigationItems","isAuth","Backdrop","show","SideDrawer","attachedClasses","open","Ouxed","UI_Backdrop_Backdrop","closeSide","join","connect","state","auth","token","_ref","_useState","useState","_useState2","Object","slicedToArray","showSideDrawer","setShowSideDriver","Fragment","Toolbar","Navigation_SideDrawer_SideDrawer","BurgerIngredient","ingredient","this","type","React","Component","withRouter","transformIngredients","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","class","buildControl","label","ingredientRemoved","disabled","ingredientsAdded","controls","buildControls","price","toFixed","elem","BuildControls_buildControl_buildControl","addedIngredients","removedIngredients","ordered","purchaseable","Modal","modalClosed","transform","opacity","Button","btnType","OrderSummary","_this","ingredientSummary","iKey","textTransform","totalPrice","UI_Button_Button","purchaseCancelled","purchaseContinued","Spinner","instance","axios","create","baseURL","ingreds","burgerBuilder","dispatch","onIngredientAdd","ingName","ingredientName","onIngredientRemove","onFetchIngredients","get","then","response","data","catch","error","console","log","onInitPurchase","purchasing","setPurchasing","_useState3","_useState4","loading","useEffect","isModalClosed","disabledInfo","objectSpread","orderSummary","burger","UI_Spinner_Spinner","Burger","BuildControls","acc","curr","history","push","Burger_OrderSummary_OrderSummary","UI_Modal_Modal","checkoutsummary","width","margin","onCheckOutCancel","onCheckOutContinue","input","inputElem","classAdded","invalid","border","background","elemType","assign","elemConfig","value","onChange","changed","options","option","display","ContactData","orderForm","name","placeholder","validation","required","minLength","valid","street","zipcode","country","email","deliveryMethod","orderHandler","e","preventDefault","orderData","orderFormIElemdentifier","order","orderFormData","userid","userId","onOrderBurger","onInputHandler","event","elemIdentifier","updatedForm","updatedFormElem","target","checkValididty","setState","rules","isValud","trim","_this2","formElemsArr","id","config","form","onSubmit","formElem","UI_Input_input","post","orderId","purchaseBurgerSuccess","fetchBurgerOrder","Checkout","checoutCancelHandler","goBack","checkoutContinueHandler","replace","summary","react_router","isPurchased","purchased","CheckoutSummary","path","match","component","amount","ingredientOutput","ig","padding","Number","parseFloat","Orders","orders","onFetchedOrders","Order","res","fetchedOrders","err","fetchOrders","authSuccess","idToken","logout","localStorage","removeItem","checkExpirationTime","expirationTime","setTimeout","Auth","password","isSignUp","onSubmitHandler","onAuth","switchModeHandler","prevState","errorMessage","message","authRedirect","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onAutoSignup","components_Layout_Layout","BurgerBuilder","getItem","getSeconds","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","bacon","cheese","meat","reducer","arguments","undefined","action","defineProperty","newOrder","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d6eea2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/27.1 burger-logo.png.b8503d26.png\";","const aux = (props) => props.children;\r\n\r\nexport default aux","import React from \"react\";\r\nimport burgerLogo from \"./../../assets/Images/27.1 burger-logo.png.png\"\r\nimport \"./logo.css\";\r\n\r\nconst Logo = props => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n    <img src={burgerLogo} alt=\"myBurger\" />\r\n\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport \"./item.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavigationItem =(props)=>{\r\n    return (\r\n        \r\n        <li className=\"Item\">\r\n        <NavLink \r\n        to={props.link} exact={props.exact} >\r\n        {props.children}</NavLink>\r\n        </li>\r\n    \r\n    )\r\n}\r\n\r\nexport default NavigationItem","import React from \"react\";\r\nimport \"./items.css\";\r\nimport Navigationitem from \"./Navigationitem/NavigationItem\";\r\n\r\n\r\nconst NavigationItems =(props)=>{\r\n    return (\r\n      <ul className=\"NavigationItems\">\r\n            <Navigationitem link=\"/\" exact> Burger Builder</Navigationitem>\r\n            {props.isAuthenticated ? <Navigationitem link=\"/orders\">Orders</Navigationitem>\r\n            : null}\r\n            {props.isAuthenticated \r\n            ? <Navigationitem link=\"/logout\">Logout</Navigationitem> \r\n            : <Navigationitem link=\"/auth\">Authenticate</Navigationitem>}\r\n      </ul>\r\n    )\r\n}\r\n\r\nexport default NavigationItems","import React from \"react\";\r\nimport \"./drawtoggle.css\"\r\n\r\nconst DrawToggle =(props) => {\r\n    return (\r\n        <div \r\n        className=\"DrawerToggle\"\r\n        onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default DrawToggle;","import React from \"react\";\r\nimport \"./toolbar.css\";\r\nimport Logo from \"./../../Logo/Logo\";\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\";\r\nimport DrawToggle from \"./../SideDrawer/drawToggle/DrawToggle\";\r\n\r\n\r\nconst ToolBar = props => {\r\n    return(\r\n        <header className=\"Toolbar\">\r\n            <DrawToggle  clicked={props.toggleClicked} />\r\n            <Logo height=\"80%\" />\r\n            <nav className=\"DesktopOnly\">\r\n                <NavigationItems \r\n                    isAuthenticated={props.isAuth}\r\n                />\r\n            </nav>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default ToolBar;","import React from \"react\";\r\nimport \"./backdrop.css\";\r\n\r\n\r\nconst Backdrop = props => {\r\n    return props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n}\r\n\r\nexport default Backdrop;","import React from \"react\";\r\nimport Logo from \"./../../Logo/Logo\";\r\nimport NavigationItems from \"./../NavigationItems/NavigationItems\";\r\nimport \"./sidedraw.css\"\r\nimport Backdrop from \"./../../UI/Backdrop/Backdrop\";\r\nimport Aux from \"./../../../hoc/Ouxed\";\r\n\r\nconst SideDrawer = (props) => {\r\n    let attachedClasses = [\"SideDraw\", \"Close\"];\r\n    if(props.open){\r\n        attachedClasses=[\"SideDraw\", \"Open\"]\r\n    }\r\n        \r\n    return (\r\n        <Aux>\r\n        <Backdrop show={props.open} \r\n        clicked={props.closeSide} />\r\n        <div className={attachedClasses.join(\" \")}>\r\n            <Logo height=\"11%\" />\r\n            <nav>\r\n                <NavigationItems isAuthenticated={props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;\r\n\r\n","import React, {useState} from \"react\"\r\n\r\nimport Aux from \"./../../hoc/Ouxed\";\r\nimport \"./layout.css\";\r\nimport Toolbar from \"./../Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"./../Navigation/SideDrawer/SideDrawer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst Layout = ({isAuthenticated, children}) => {\r\n\r\n    const [showSideDrawer, setShowSideDriver] = useState(true)\r\n    \r\n    const SideDrawerCloseHandler = () => {\r\n            setShowSideDriver(false)\r\n    }\r\n\r\n    const sideDrawToggleHandler = () => {\r\n        setShowSideDriver(true)\r\n    }\r\n\r\n        return (\r\n            <>\r\n        <Aux>\r\n        <Toolbar\r\n        isAuth={isAuthenticated}\r\n        toggleClicked={sideDrawToggleHandler}\r\n         />\r\n        <SideDrawer\r\n        isAuth={isAuthenticated}\r\n        open={showSideDrawer}\r\n         closeSide={SideDrawerCloseHandler} />\r\n        <div>Toolbar, SideDrawer, Backdrop</div>\r\n        <main className=\"content\">\r\n            {children}\r\n        </main>\r\n        </Aux>\r\n        </>\r\n)\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Layout)","import React from \"react\";\r\nimport \"./burgerIngredient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass BurgerIngredient extends React.Component {\r\n   \r\n    render(){\r\n\r\n        let ingredient = null;\r\n        \r\n        switch(this.props.type){\r\n            case (\"bread-bottom\"):\r\n                ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n                case(\"bread-top\"):\r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                    <div className=\"Seeds1\"></div>\r\n                    <div className=\"Seeds2\"></div>\r\n\r\n                </div>\r\n            );\r\n            break;\r\n            case (\"meat\"): \r\n            ingredient = <div className=\"Meat\"></div>;\r\n            break;\r\n            case (\"cheese\"): \r\n            ingredient = <div className=\"Cheese\"></div>;\r\n            break;\r\n            case (\"salad\"): \r\n            ingredient = <div className=\"Salad\"></div>;\r\n            break;\r\n            case (\"bacon\"): \r\n            ingredient = <div className=\"Bacon\"></div>;\r\n            break;\r\n            default: \r\n            ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n    }\r\n    \r\n    BurgerIngredient.propTypes = {\r\n        type: PropTypes.string.isRequired\r\n    }\r\n    \r\n    \r\n    export default BurgerIngredient;\r\n    ","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./burger.css\"\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\n\r\n\r\nconst burger = (props) => {\r\n    let transformIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n          return  <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    }).reduce((arr, el) => {\r\n       return arr.concat(el)\r\n    }, [])\r\n\r\n    if(transformIngredients.length === 0){\r\n        transformIngredients = <p>Please start adding ingredients</p>\r\n    }\r\n    return(\r\n        <div class=\"burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n           {transformIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(burger);","import React from \"react\";\r\nimport \"./buildControl.css\"\r\n\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n        <div className=\"buildControl\">\r\n            <div className=\"Label\">{props.label}</div>\r\n            <button className=\"Less\"\r\n             onClick={props.ingredientRemoved}\r\n             disabled={props.disabled}\r\n             >Less</button>\r\n            <button className=\"More\" onClick={props.ingredientsAdded}>More</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControl;","import React from \"react\";\r\nimport \"./buildControls.css\";\r\nimport BuildControl from \"./buildControl/buildControl\";\r\n\r\n\r\nconst controls = [\r\n    {label: \"Salad\", type: \"salad\"},\r\n    {label: \"Bacon\", type: \"bacon\"},\r\n    {label: \"Cheese\", type: \"cheese\"},\r\n    {label: \"Meat\", type: \"meat\"}\r\n]\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n    return (\r\n        <div className=\"buildControls\">\r\n        <p>Current price:  <strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map(elem => {\r\n                return <BuildControl \r\n                key={elem.label}\r\n                 label={elem.label}\r\n                 ingredientsAdded = {() => props.addedIngredients(elem.type)}\r\n                ingredientRemoved = {() => props.removedIngredients(elem.type)}\r\n                disabled={props.disabled[elem.type]}\r\n                  />\r\n            })}\r\n            <button\r\n            onClick={props.ordered}\r\n            disabled={!props.purchaseable}\r\n            className=\"OrderButton\">{props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControls;\r\n","import React from \"react\";\r\nimport \"./modal.css\"\r\nimport Aux from \"../../../hoc/Ouxed\";\r\nimport Backdrop from \"./../Backdrop/Backdrop\";\r\n\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <Aux>\r\n        <Backdrop \r\n        show={props.show}\r\n        clicked={props.modalClosed}\r\n         />\r\n        <div \r\n         style={{\r\n            transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: props.show ? \"1\" : \"0\"\r\n        }}\r\n        className=\"Modal\">\r\n\r\n        {props.children}\r\n        </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default Modal","import React from \"react\";\r\nimport \"./button.css\";\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button\r\n         onClick={props.clicked}\r\n         className={`Button ${props.btnType}`}\r\n             > {props.children}</button>\r\n    )\r\n\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Aux from \"../../../hoc/Ouxed\";\r\nimport Button from \"./../../UI/Button/Button\";\r\n\r\nclass OrderSummary extends React.Component {\r\n\r\n    render(){\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(iKey => {\r\n            return <li key={iKey}><span style={{textTransform: \"capitalize\"}}>{iKey}</span>: {this.props.ingredients[iKey]}</li>\r\n        })\r\n        \r\n        return (\r\n            <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total price: {this.props.totalPrice.toFixed(2)}</strong></p>\r\n        <p>Continue to checkout?</p>\r\n        <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n        <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>\r\n    )\r\n}\r\n}\r\n\r\nexport default OrderSummary;","import React from \"react\";\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner = () => (\r\n    <div class=\"loader\">Loading...</div>\r\n)\r\n\r\n\r\nexport default Spinner;","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://burger-react-5a236.firebaseio.com/\"\r\n})\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Aux from \"../../hoc/Ouxed\";\r\nimport Burger from \"./../../components/Burger/Burger\";\r\nimport BuildControls from \"./../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"./../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"./../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport * as burgerBuilderActions from \"./../../store/actions/burgerBuilder\";\r\n\r\nconst BurgerBuilder = (props) => {\r\n    const [purchasing, setPurchasing] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        props.onFetchIngredients()\r\n    }, [])\r\n\r\n    const isModalClosed = () => {\r\n        setPurchasing(false)\r\n    }\r\n\r\n\r\n    const purchaseHandler = () => {\r\n        if (props.isAuthenticated) {\r\n            setPurchasing(true)\r\n        } else {\r\n            props.history.push(\"/auth\")\r\n        }\r\n    }\r\n\r\n    const purchaseContinueHandler = () => {\r\n        props.onInitPurchase();\r\n        props.history.push(\r\n            \"/checkout\"\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const updatePurchaseState = (ingredients) => {\r\n\r\n        const sum = Object.keys(ingredients)\r\n            .map(iKey => {\r\n\r\n                return ingredients[iKey]\r\n            })\r\n            .reduce((acc, curr) => {\r\n                return acc + curr\r\n            }, 0)\r\n\r\n        return sum > 0\r\n\r\n    }\r\n\r\n\r\n\r\n    // onRemoveIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ... this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     if (oldCount <= 0) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const priceDecrease = INGREDIENT_PRICES[type];\r\n    //     const newPrice = oldPrice - priceDecrease\r\n\r\n    //     this.setState({\r\n    //         ingredients: updatedIngredients,\r\n    //         totalPrice: newPrice\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients)\r\n\r\n    // }\r\n\r\n\r\n    const disabledInfo = {\r\n        ...props.ingreds\r\n    };\r\n    for (let key in disabledInfo) {\r\n        disabledInfo[key] = disabledInfo[key] <= 0\r\n    }\r\n    let orderSummary = null;\r\n\r\n    let burger = <Spinner />\r\n    if (props.ingreds) {\r\n\r\n        burger = (\r\n            <Aux>\r\n                <Burger ingredients={props.ingreds} />\r\n                <BuildControls\r\n                    addedIngredients={props.onIngredientAdd}\r\n                    removedIngredients={props.onIngredientRemove}\r\n                    disabled={disabledInfo}\r\n                    purchaseable={updatePurchaseState(props.ingreds)}\r\n                    ordered={purchaseHandler}\r\n                    price={props.price}\r\n                    isAuth={props.isAuthenticated}\r\n                />\r\n            </Aux>\r\n        )\r\n        orderSummary = <OrderSummary\r\n            ingredients={props.ingreds}\r\n            purchaseCancelled={isModalClosed}\r\n            purchaseContinued={purchaseContinueHandler}\r\n            totalPrice={props.price} />\r\n    }\r\n    if (loading) {\r\n        orderSummary = <Spinner />\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Modal\r\n                modalClosed={isModalClosed}\r\n                show={purchasing}>\r\n                {orderSummary}\r\n            </Modal>\r\n            {burger}\r\n        </Aux>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingreds: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdd: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemove: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        onFetchIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\r\n        onInitPurchase: () => dispatch(burgerBuilderActions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder);","import * as actionTypes from \"./actions\";\r\nimport axios from \"./../../axios-order\";\r\n\r\n\r\nexport const addIngredient = name => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\nexport const removeIngredient = name => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = ingredients => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients,\r\n    }\r\n}\r\n\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get(\"https://burger-react-5a236.firebaseio.com/ingredients.json\")\r\n        \r\n        .then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {console.log(error)})\r\n    }\r\n}\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS = \"FETCH_INGREDIENTS\";\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCES\";\r\nexport const PURCHASE_FAILED = \"PURCHASE_FAILED\";\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_START_SUCCESS\";\r\nexport const AUTH__FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";","import React from \"react\";\r\nimport \"./checkoutsummary.css\";\r\nimport Burger from \"./../../Burger/Burger\";\r\nimport Button from \"./../../UI/Button/Button\";\r\n\r\n\r\nconst checkoutsummary = props => {\r\n    return(\r\n    \r\n        <div className=\"CheckoutSummary\">\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: \"100%\", height: \"300px\", margin: \"auto\"}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n\r\n                <div>\r\n                <Button btnType=\"Danger\" clicked={props.onCheckOutCancel}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={props.onCheckOutContinue}>SUCCESS</Button>\r\n                </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default checkoutsummary;","import React from 'react';\r\nimport \"./input.css\";\r\n\r\nconst input = props => {\r\n    let inputElem = null;\r\n\r\n    let addClass = {\r\n        border: \"1px solid red\",\r\n        background: \"salmon\"\r\n    }\r\n    let classAdded = null;\r\n    if(props.invalid){\r\n       classAdded = addClass;\r\n    }\r\n\r\n    switch (props.elemType) {\r\n        case \"input\":\r\n            inputElem = <input className=\"InputElem\" {...props.elemConfig}\r\n                value={props.value} \r\n                    onChange={props.changed}\r\n                    style={classAdded}\r\n                />\r\n            break;\r\n        case \"textarea\":\r\n            inputElem = <textarea className=\"InputElem\" {...props.elemConfig}\r\n                value={props.value} \r\n                    onChange={props.changed}\r\n                />\r\n            break;\r\n        case \"select\":\r\n            inputElem = <select className=\"InputElem\"\r\n                onChange={props.changed}\r\n                value={props.value}>\r\n                {props.elemConfig.options.map(option => {\r\n                    return <option\r\n                        key={option.value}\r\n                        value={option.value}>{option.display}\r\n                    </option>\r\n                })}\r\n            </select>\r\n            break;\r\n        default:\r\n            inputElem = <input className=\"InputElem\"\r\n            onChange={props.changed}\r\n             {...props.elemConfig}\r\n                value={props.value} />\r\n    }\r\n    return (\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.label}</label>\r\n            {inputElem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React, { Component } from \"react\";\r\n\r\nimport Spinner from \"./../../UI/Spinner/Spinner\";\r\nimport Button from \"./../../UI/Button/Button\";\r\nimport \"./contactdata.css\"\r\nimport axios from \"../../../axios-order\";\r\nimport Input from \"./../../UI/Input/input\";\r\nimport { connect } from \"react-redux\";\r\nimport {fetchBurgerOrder} from \"./../../../store/actions/order\";\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elemType: \"input\",\r\n                elemConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Your Name\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false\r\n            },\r\n            street: {\r\n                elemType: \"input\",\r\n                elemConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Street\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false\r\n\r\n            },\r\n\r\n            zipcode: {\r\n                elemType: \"input\",\r\n                elemConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Zip code\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false\r\n\r\n            },\r\n            country: {\r\n                elemType: \"input\",\r\n                elemConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Your country\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false\r\n\r\n            },\r\n            email: {\r\n                elemType: \"input\",\r\n                elemConfig: {\r\n                    type: \"emai\",\r\n                    placeholder: \"Your Email\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false\r\n\r\n            },\r\n            deliveryMethod: {\r\n                elemType: \"select\",\r\n                elemConfig: {\r\n                    options: [{ value: \"fastest\", display: \"Fastest\" },\r\n                            { value: \"chepest\", display: \"Chepaest\" }]\r\n                },\r\n                value: \"fastest\",\r\n                validation: {},\r\n                valid: true\r\n            },\r\n        }\r\n    }\r\n\r\n    checkValididty(value, rules) {\r\n        let isValud = false;\r\n\r\n        if(rules.required){\r\n            isValud = value.trim() !== \"\" && isValud\r\n        }\r\n        if(rules.minLength){\r\n            isValud = value.length >= rules.minLength;\r\n        }\r\n\r\n        return isValud\r\n    }\r\n\r\n\r\n    orderHandler = (e) => {\r\n        e.preventDefault();\r\n        const orderData = {};\r\n        for(let orderFormIElemdentifier in this.state.orderForm){\r\n            orderData[orderFormIElemdentifier] = this.state.orderForm[orderFormIElemdentifier].value;\r\n\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingreds,\r\n            price: this.props.price,\r\n            orderFormData: orderData,\r\n            userid: this.props.userId\r\n\r\n        }\r\n        this.props.onOrderBurger(order, this.props.token)\r\n    }\r\n\r\n    onInputHandler = (event, elemIdentifier) => {\r\n        const updatedForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElem = {\r\n            ...updatedForm[elemIdentifier]\r\n        };\r\n        updatedFormElem.value = event.target.value;\r\n        updatedFormElem.valid = this.checkValididty(updatedFormElem.value, updatedFormElem.validation)\r\n        updatedForm[elemIdentifier] = updatedFormElem\r\n      \r\n        this.setState({\r\n            orderForm: updatedForm\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let formElemsArr = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElemsArr.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n\r\n            })\r\n        }\r\n\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElemsArr.map(formElem => {\r\n                    return <Input\r\n                        key={formElem.id}\r\n                        elemType={formElem.config.elemType}\r\n                        elemConfig={formElem.config.elemConfig}\r\n                        value={formElem.config.value}\r\n                        invalid={!formElem.config.valid}\r\n                    changed={(event) => this.onInputHandler(event, formElem.id)}\r\n                    />\r\n                })}\r\n                <Button btnType=\"Success\" >ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n        return (\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingreds: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(fetchBurgerOrder(orderData, token))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData);","import * as actionTypes from \"./actions\";\r\nimport axios from \"./../../axios-order\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fetchBurgerOrder = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post(\"/orders.json?auth=\" + token, orderData)\r\n            .then(response => {\r\n              dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n}\r\n\r\nexport const fetchOrderSucces = orders => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrderFail = error => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart =()=> {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token) => {\r\n    return (dispatch) => {\r\n        dispatch(fetchOrderStart(token))\r\n        axios.get(\"/orders.json?auth=\" + token)\r\n        .then(res => {\r\n            let fetchedOrders = new Array();\r\n            for(let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                id: key});\r\n            }\r\n            dispatch(fetchOrderSucces(fetchedOrders))\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CheckoutSummary from \"./../Order/checkoutSummary/CheckoutSummary\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport { purchaseInit } from \"./../../store/actions/order\";\r\n\r\nclass Checkout extends Component {\r\n\r\n    componentWillMount(){\r\n        this.props.onInitPurchase()\r\n    }\r\n\r\n\r\n\r\n    checoutCancelHandler = () =>{\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinueHandler = () => {\r\n        this.props.history.replace(\"/checkout/contact-data\")\r\n    }\r\n\r\n    render(){\r\n        let summary = <Redirect to=\"/\" />\r\n        let isPurchased = this.props.purchased ? <Redirect to=\"/\" /> : null\r\n        if(this.props.ingreds) {\r\n            summary = (\r\n                <div>\r\n                {isPurchased}\r\n                <CheckoutSummary \r\n                    onCheckOutCancel={this.checoutCancelHandler}\r\n                    onCheckOutContinue={this.checkoutContinueHandler}\r\n                ingredients={this.props.ingreds} />\r\n                <Route path={this.props.match.path + \"/contact-data\"} \r\n               component={ContactData}\r\n                />\r\n                </div>\r\n            )\r\n        }\r\n        return summary\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingreds: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased   \r\n    }\r\n}\r\n\r\nconst mapDispatchTopROPS = dispatch => {\r\n    return {\r\n        onInitPurchase: () => dispatch(purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchTopROPS)(Checkout);","import React from \"react\";\r\nimport \"./order.css\";\r\n\r\n\r\nconst order = props => {\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {name: ingredientName,\r\n             amount:props.ingredients[ingredientName]}\r\n             )\r\n    }\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return (\r\n            <span key={ig.name}\r\n            style={{textTransform: \"capitalize\",\r\n                display: \"inline-block\",\r\n                margin: \"0 8px\",\r\n                border: \"1px solid #ccc\",\r\n                padding: \"5px\"\r\n            }}\r\n            >{ig.name} {ig.amount}</span>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, { Component } from \"react\";\r\nimport axios from \"./../../axios-order\";\r\n\r\nimport Order from \"./../../components/Order/Order\";\r\nimport { fetchOrders } from \"./../../store/actions/order\";\r\nimport { connect } from \"react-redux\"\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchedOrders(this.props.token)\r\n    }\r\n\r\n\r\n    render() {\r\n        let orders = <Spinner />\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => {\r\n                return (\r\n                    <Order key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchedOrders: (token) => dispatch(fetchOrders(token))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import * as actionTypes from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () =>{\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId \r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return {\r\n        type: actionTypes.AUTH__FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationDate\");\r\n    localStorage.removeItem(\"userId\");\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkExpirationTime = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if(!token){\r\n            dispatch(logout())\r\n        }else {\r\n            const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            }else{\r\n                const userId = localStorage.getItem(\"userId\")\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkExpirationTime(expirationDate.getSeconds() - new Date().getSeconds()))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password:password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyD9RVXtLz2rJzCiepEU60N64gbEV16SEz8\";\r\n        if(!isSignup){\r\n            url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyD9RVXtLz2rJzCiepEU60N64gbEV16SEz8\"\r\n        }\r\n\r\n\r\n        axios.post(url, authData)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem(\"token\", response.data.idToken);\r\n            localStorage.setItem(\"exporationDate\", expirationDate);\r\n            localStorage.setItem(\"userId\", response.data.localId)\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId))\r\n            dispatch(checkExpirationTime(response.data.expiresIn))\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error))\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Spinner from \"./../../components/UI/Spinner/Spinner\";\r\nimport Input from \"./../../components/UI/Input/input\";\r\nimport Button from \"./../../components/UI/Button/Button\";\r\nimport \"./auth.css\";\r\nimport { auth } from \"./../../store/actions/auth\";\r\nimport {Redirect} from   \"react-router-dom\";\r\n\r\n\r\nclass Auth extends React.Component {\r\n    state = {\r\n        orderForm: {\r\n            email: {\r\n                elemType: \"input\",\r\n                elemConfig: {\r\n                    type: \"emai\",\r\n                    placeholder: \"Your Email\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false\r\n\r\n            },\r\n            password: {\r\n                elemType: \"input\",\r\n                elemConfig: {\r\n                    type: \"password\",\r\n                    placeholder: \"Your Password\"\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5\r\n                },\r\n                valid: false\r\n            },\r\n            \r\n        },\r\n        isSignUp: true\r\n    }\r\n\r\n    checkValididty(value, rules) {\r\n        let isValud = false;\r\n\r\n        if(rules.required){\r\n            isValud = value.trim() !== \"\" && isValud\r\n        }\r\n        if(rules.minLength){\r\n            isValud = value.length >= rules.minLength;\r\n        }\r\n\r\n        return isValud\r\n    }\r\n\r\n\r\n    onInputHandler = (event, elemIdentifier) => {\r\n        const updatedForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElem = {\r\n            ...updatedForm[elemIdentifier]\r\n        };\r\n        updatedFormElem.value = event.target.value;\r\n        updatedFormElem.valid = this.checkValididty(updatedFormElem.value, updatedFormElem.validation)\r\n        updatedForm[elemIdentifier] = updatedFormElem\r\n      \r\n        this.setState({\r\n            orderForm: updatedForm\r\n        })\r\n\r\n    }\r\n\r\n    onSubmitHandler = () => {\r\n       this.props.onAuth(this.state.orderForm.email.value, \r\n        this.state.orderForm.password.value,\r\n        this.state.isSignUp)\r\n    }\r\n\r\n    switchModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignUp: !prevState.isSignUp\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        let formElemsArr = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElemsArr.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n\r\n            })\r\n        }\r\n        let form = formElemsArr.map(formElem => {\r\n            return (\r\n                <Input\r\n                        key={formElem.id}\r\n                        elemType={formElem.config.elemType}\r\n                        elemConfig={formElem.config.elemConfig}\r\n                        value={formElem.config.value}\r\n                        invalid={!formElem.config.valid}\r\n                    changed={(event) => this.onInputHandler(event, formElem.id)}\r\n                    />\r\n            )\r\n        })\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div className=\"auth\">\r\n            {authRedirect}\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                this.onSubmitHandler()   \r\n            }}>\r\n            {form}\r\n            {errorMessage}\r\n            <Button btnType=\"Success\">Submit</Button>\r\n            </form>\r\n            <Button \r\n            clicked={this.switchModeHandler}\r\n            btnType=\"Danger\">SWITCH TO {this.state.isSignUp ? \"SIGN IN\" : \"SIGN UP\"}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(auth(email, password, isSignup))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, {Component} from \"react\";\r\nimport { logout } from \"./../../../store/actions/auth\";\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Redirect to=\"/\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDisptachToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDisptachToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport \"./App.css\"\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./components/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/logout/Logout\";\nimport { authCheckState } from \"./store/actions/auth\";\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.onAutoSignup()\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Layout>\n         <Route path=\"/auth\" component={Auth} />\n         {this.props.isAuthenticated ? <Switch>\n         <Route path=\"/logout\" component={Logout} />\n         <Route path=\"/checkout\" component={Checkout} />\n         <Route path=\"/orders\" component={Orders} />         \n         <Route path=\"/\" exact component={BurgerBuilder} />\n         </Switch> :\n\n         <h1 className=\"authorise\">Welcome, please authenticate your account first!</h1>}\n        \n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token != null,\n    \n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoSignup: () => dispatch(authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"./../actions/actions\";\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.4,\r\n    bacon: 5,\r\n    cheese: 2.5,\r\n    meat: 3,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                totalPrice: 4\r\n            }\r\n            case actionTypes.FETCH_INGREDIENTS: \r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import * as actionTypes from \"./../actions/actions\";\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        \r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId,\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            }\r\n        case actionTypes.PURCHASE_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            case actionTypes.FETCH_ORDERS:\r\n                return {\r\n                    ...state,\r\n                    loading: false\r\n                }\r\n                case actionTypes.FETCH_ORDERS_SUCCESS: \r\n                return {\r\n                    ...state,\r\n                    orders: action.orders,\r\n                    loading: false\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;\r\n\r\n\r\n","import * as actionTypes from \"./../actions/actions\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return {\r\n        ...state,\r\n        token: null,\r\n        userId: null\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            }\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                error: null,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH__FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n\r\n            }\r\n            case actionTypes.AUTH_LOGOUT:\r\n                return authLogout(state, action)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./store/reducers/burgerBuilder\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\n\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: reducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n) );\n\nconst app = (\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}